@PART[bluedog_Apollo_Block2_SM]:NEEDS[ProfileDefault]:FIRST
{
	!MODULE[ModuleResourceConverter]:HAS[#ConverterName[Fuel?Cell]] {}
	!MODULE[Reliability]:HAS[#title[Converter]] {}
}

@PART[bluedog_Apollo_Block2_SM]:NEEDS[ProfileDefault]:FINAL
{	
	MODULE
	{
		name = ProcessController
		resource = _FuelCell
		title = #KERBALISM_H2O2FuelCell_title//H2+O2 fuel cell
		capacity = 1
		valve_i = 1 // workaround until we have a better way to deal with dump valves
	}
	
	MODULE:NEEDS[FeatureReliability]
	{
		name = Reliability
		type = ProcessController
		title = #KERBALISM_FuelCell_title//Fuel Cell
		redundancy = Power Generation
		repair = Engineer
		mtbf = 72576000
		extra_cost = 1.0
		extra_mass = 0.5
	}
	
	RESOURCE
	{
		name = Oxygen
		amount = 55000
		maxAmount = 55000
	}
	
	RESOURCE
	{
		name = Hydrogen
		amount = 110000
		maxAmount = 110000
	}
}

@PART[bluedog_Apollo_Block3_SM]:NEEDS[ProfileDefault]:FINAL
{
	@RESOURCE[ElectricCharge]
	{
		@amount = 16384
		@maxAmount = 16384
	}
}

@PART[bluedog_LM_Ascent_Cockpit]:NEEDS[ProfileDefault]:FINAL
{
	@RESOURCE[ElectricCharge]
	{
		@amount = 5192
		@maxAmount = 5192
	}
}

@PART[bluedog_Skylab_VFB_ESM]:NEEDS[ProfileDefault]:FINAL
{
	//3 kerbals for 400 days
	@RESOURCE[Food]
	{
		@amount = 3
		@maxAmount = 3
        @amount *= #$@WALLUMCONFIG/LIFESUPPORT/FOOD$
        @maxAmount *= #$@WALLUMCONFIG/LIFESUPPORT/FOOD$
        @amount *= 400
        @maxAmount *= 400
	}    
	@RESOURCE[Water]
	{
		@amount = 3
		@maxAmount = 3
        @amount *= #$@WALLUMCONFIG/LIFESUPPORT/WATER$
        @maxAmount *= #$@WALLUMCONFIG/LIFESUPPORT/WATER$
        @amount *= 400
        @maxAmount *= 400
	}
	@RESOURCE[Oxygen]
	{
		@amount = 3
		@maxAmount = 3
        @amount *= #$@WALLUMCONFIG/LIFESUPPORT/OXYGEN$
        @maxAmount *= #$@WALLUMCONFIG/LIFESUPPORT/OXYGEN$
        @amount *= 400
        @maxAmount *= 400
	}
}

@PART[bluedog_Skylab_airlockModule,bluedog_Skylab_airlockModule_SAF]:NEEDS[ProfileDefault]:FINAL
{
	//3 kerbals for 240 days
	//Skylab was occuiped for ~170 days with a Skylab 5 noted for 20
	//Skylab also noted to have 24 man-months of supplies
	@RESOURCE[Food]
	{
		@amount = 3
		@maxAmount = 3
        @amount *= #$@WALLUMCONFIG/LIFESUPPORT/FOOD$
        @maxAmount *= #$@WALLUMCONFIG/LIFESUPPORT/FOOD$
        @amount *= 240
        @maxAmount *= 240
	}    
	@RESOURCE[Water]
	{
		@amount = 3
		@maxAmount = 3
        @amount *= #$@WALLUMCONFIG/LIFESUPPORT/WATER$
        @maxAmount *= #$@WALLUMCONFIG/LIFESUPPORT/WATER$
        @amount *= 240
        @maxAmount *= 240
	}
	@RESOURCE[Oxygen]
	{
		@amount = 3
		@maxAmount = 3
        @amount *= #$@WALLUMCONFIG/LIFESUPPORT/OXYGEN$
        @maxAmount *= #$@WALLUMCONFIG/LIFESUPPORT/OXYGEN$
        @amount *= 240
        @maxAmount *= 240
	}
}

@PART[bluedog_spacelab_forwardAdapter,bluedog_spacelab_forwardAdapter_SAF]:NEEDS[ProfileDefault]:FINAL
{
	//4 kerbals for 1 year, based from ETS missions
	//less water and oxygen
	@RESOURCE[Food]
	{
		@amount = 4
		@maxAmount = 4
        @amount *= #$@WALLUMCONFIG/LIFESUPPORT/FOOD$
        @maxAmount *= #$@WALLUMCONFIG/LIFESUPPORT/FOOD$
        @amount *= 360
        @maxAmount *= 360
	}    
	@RESOURCE[Water]
	{
		@amount = 4
		@maxAmount = 4
        @amount *= #$@WALLUMCONFIG/LIFESUPPORT/WATER$
        @maxAmount *= #$@WALLUMCONFIG/LIFESUPPORT/WATER$
        @amount *= 60
        @maxAmount *= 360
	}
	@RESOURCE[Oxygen]
	{
		@amount = 4
		@maxAmount = 4
        @amount *= #$@WALLUMCONFIG/LIFESUPPORT/OXYGEN$
        @maxAmount *= #$@WALLUMCONFIG/LIFESUPPORT/OXYGEN$
        @amount *= 60
        @maxAmount *= 360
	}
}

@PART[bluedog_spacelab_forwardAdapter,bluedog_spacelab_forwardAdapter_SAF]:NEEDS[ProfileDefault]:FINAL
{
	//ETS timing suggests it would have water/oxygen recylcing
	@MODULE[Configure]:HAS[#title[Pod]]
	{
		@slots = 5
	}
	
	@MODULE[ProcessController]:HAS[#resource[_Scrubber]]
	{
		@capacity = 4
	}
	
	@MODULE[ProcessController]:HAS[#resource[_WaterRecycler]]
	{
		@capacity = 8.4
	}
	
	MODULE
	{
		name = ProcessController
		resource = _WaterElectrolysis
		title = #KERBALISM_WaterElectrolysis_title//Water electrolysis
		capacity = 0.02 //0.25
	}

	MODULE
	{
		name = ProcessController
		resource = _Sabatier
		title = #KERBALISM_SabatierProcess_title//Sabatier process
		capacity = 4
		valve_i = 2 // workaround until we have a better way to deal with dump valves
	}
	
	@MODULE[Configure]:HAS[#title[Pod]]
	{
		SETUP
		{
			name = Water Electrolysis
			desc = #KERBALISM_WaterElectrolysis_desc//Split <b>Water</b> into its <b>Hydrogen</b> and <b>Oxygen</b> components.

			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _WaterElectrolysis
				mass = 0.05
				cost = 500
			}
		}

		SETUP
		{
			name = Sabatier Process
			desc = #KERBALISM_SabatierProcess_desc//<b>Hydrogen</b> and <b>CarbonDioxide</b> react with a nickel catalyst to produce <b>Water</b> and <b>LiquidFuel</b>.

			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _Sabatier
				mass = 0.05
				cost = 1500
			}
		}
	}
	
	RESOURCE
	{
		name = Hydrogen
		amount = 0
		maxAmount = 5000
	}
}

@PART[bluedog_Mercury_Capsule]:NEEDS[ProfileDefault]:FINAL
{
	!MODULE[Configure]:HAS[#title[Pod]] {}
	!MODULE[ProcessController]:HAS[#resource[_WaterRecycler]] {}
	!MODULE[ProcessController]:HAS[#resource[_WasteProcessor]] {}
}

@PART[bluedog_Agena_EquipmentRack,bluedog_MiniLab_Adapter,bluedog_Agena_EngineShroud,bluedog_Biosat_Adapter,bluedog_Agena_EngineMount]:NEEDS[ProfileDefault]:FIRST
{
	!MODULE[ModuleResourceConverter]:HAS[#ConverterName[Fuel?Cell]] {}
	!MODULE[Reliability]:HAS[#title[Converter]] {}
}

@PART[bluedog_Agena_EquipmentRack,bluedog_MiniLab_Adapter,bluedog_Agena_EngineShroud,bluedog_Biosat_Adapter,bluedog_Agena_EngineMount]:NEEDS[ProfileDefault]:FIRST
{
	MODULE
	{
		name = ProcessController
		resource = _MonopropFuelCell
		title = #KERBALISM_MonopropO2FuelCell_title//Monoprop+O2 fuel cell
		capacity = 1
		running = false
	}
	
	MODULE:NEEDS[FeatureReliability]
	{
		name = Reliability
		type = ProcessController
		title = #KERBALISM_FuelCell_title//Fuel Cell
		redundancy = Power Generation
		repair = Engineer
		mtbf = 72576000
		extra_cost = 1.0
		extra_mass = 0.5
	}
}

@PART[bluedog_MiniLab_Adapter]:NEEDS[ProfileDefault]:FINAL
{
	@RESOURCE[ElectricCharge]
	{
		@amount *= 16
		@maxAmount *= 16
	}
}

@PART[bluedog_MOL_EquipmentSection]:NEEDS[ProfileDefault]:FIRST
{
	!MODULE[ModuleResourceConverter]:HAS[#ConverterName[Fuel?Cell]] {}
	!MODULE[Reliability]:HAS[#title[Converter]] {}
}

@PART[bluedog_MOL_EquipmentSection]:NEEDS[ProfileDefault]:FINAL
{	
	MODULE
	{
		name = ProcessController
		resource = _FuelCell
		title = #KERBALISM_H2O2FuelCell_title//H2+O2 fuel cell
		capacity = 1
		valve_i = 1 // workaround until we have a better way to deal with dump valves
	}
	
	MODULE:NEEDS[FeatureReliability]
	{
		name = Reliability
		type = ProcessController
		title = #KERBALISM_FuelCell_title//Fuel Cell
		redundancy = Power Generation
		repair = Engineer
		mtbf = 72576000
		extra_cost = 1.0
		extra_mass = 0.5
	}
	
	RESOURCE
	{
		name = Oxygen
		amount = 55000
		maxAmount = 55000
	}
	
	RESOURCE
	{
		name = Hydrogen
		amount = 110000
		maxAmount = 110000
	}
}

@PART[bluedog_Mercury_Capsule]:NEEDS[ProfileDefault]:AFTER[KerbalismDefault]
{
	@RESOURCE[Food]
	{
        @amount = #$@WALLUMCONFIG/LIFESUPPORT/FOOD$
        @maxAmount = #$@WALLUMCONFIG/LIFESUPPORT/FOOD$
        @amount *= 1.5
        @maxAmount *= 1.5
	}
	@RESOURCE[Water]
	{
        @amount = #$@WALLUMCONFIG/LIFESUPPORT/WATER$
        @maxAmount = #$@WALLUMCONFIG/LIFESUPPORT/WATER$
        @amount *= 1.5
        @maxAmount *= 1.5
	}
	@RESOURCE[Oxygen]
	{
        @amount = #$@WALLUMCONFIG/LIFESUPPORT/OXYGEN$
        @maxAmount = #$@WALLUMCONFIG/LIFESUPPORT/OXYGEN$
        @amount *= 1.5
        @maxAmount *= 1.5
	}
	@RESOURCE[ElectricCharge]
	{
		@amount = 4500
		@maxAmount = 4500
	}
}

B9_TANK_TYPE
{
	name = WallumGeminiEC
	tankMass = 0
	tankCost = 0
	
	RESOURCE
	{
		name = ElectricCharge
		unitsPerVolume = 1341.5 // 110000/80
	}
}

@PART[bluedog_Gemini_EquipmentModule]:NEEDS[ProfileDefault]:FINAL
{
	!MODULE[ModuleResourceConverter]:HAS[#ConverterName[Fuel?Cell]] {}
	!MODULE[Reliability]:HAS[#title[Converter]] {}
	!MODULE[ModuleB9PartSwitch]:HAS[#moduleID[fuelCellSwitch]] {}
	!MODULE[ModuleB9PartSwitch]:HAS[#moduleID[textureSwitchStyle]] {}
	!MODULE[ModuleB9PartSwitch]:HAS[#moduleID[volumeSwitch]] {}

	MODULE
	{
		name = ModuleB9PartSwitch
		moduleID = variantSwitchStyle
		switcherDescription = Variant
		switcherDescriptionPlural = Variants
		baseVolume = 80
		
		SUBTYPE
		{
			name = Early
			title = Early
			transform = EarlyModel
			descriptionSummary = Early frills. //Produces 40 EC per 1 kg of Monopropellant
			descriptionDetail = Lightest and cheapest option. //A simple device that consumes Monopropellant to produce EC.
			defaultSubtypePriority = 1
			tankType = WallumGeminiEC
			
			RESOURCE
			{
				name = MonoPropellant
				unitsPerVolume = 1
			}
		}
		SUBTYPE
		{
			name = Late
			title = Late
			transform = LateModel
			descriptionSummary = Late frills. Produces 2695 EC per 1 kg of H2/O2.
			descriptionDetail = Heavier and pricy option. Efficient fuel cell that does not consume Monopropellant. Hydrogen and Oxygen are combined to produce EC and water.
			defaultSubtypePriority = 0
			addedMass = 0.3
			addedCost = 2250
			volumeAdded = 0
			tankType = bdbSupplyH2O2
			
			RESOURCE
			{
				name = MonoPropellant
				unitsPerVolume = 1
			}
		}
	}
	
	MODULE
	{
		name = ProcessController
		resource = _FuelCell
		title = #KERBALISM_H2O2FuelCell_title//H2+O2 fuel cell
		capacity = 1
		valve_i = 1 // workaround until we have a better way to deal with dump valves
	}
	
	MODULE
	{
		name = Configure
		title = Fuel Cell
		slots = 1

		SETUP
		{
			name = Hydrogen Oxygen Fuel Cell
			desc = #KERBALISM_H2O2FuelCell_desc//Burns <b>Hydrogen</b> gas and <b>Oxygen</b> gas, producing <b>Water</b> as a by-product.
		
			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _FuelCell
			}
		}

		SETUP
		{
			name = None
			desc = #KERBALISM_None_desc//Empty slot for mass and cost savings.
		}
	}

	MODULE:NEEDS[FeatureReliability]
	{
		name = Reliability
		type = ProcessController
		title = #KERBALISM_FuelCell_title//Fuel Cell
		redundancy = Power Generation
		repair = Engineer
		mtbf = 72576000
		extra_cost = 1.0
		extra_mass = 0.5
	}
}

@PART[bluedog_BigG_CylindricalSM]:NEEDS[ProfileDefault]:FINAL
{
	MODULE
	{
		name = ProcessController
		resource = _FuelCell
		title = #KERBALISM_H2O2FuelCell_title//H2+O2 fuel cell
		capacity = 1
		valve_i = 1 // workaround until we have a better way to deal with dump valves
	}

	MODULE:NEEDS[FeatureReliability]
	{
		name = Reliability
		type = ProcessController
		title = #KERBALISM_FuelCell_title//Fuel Cell
		redundancy = Power Generation
		repair = Engineer
		mtbf = 72576000
		extra_cost = 1.0
		extra_mass = 0.5
	}
}

@PART[bluedog_BigG_CylindricalSM]:NEEDS[ProfileDefault]:FIRST
{
	RESOURCE
	{
        name = Oxygen
        amount = 41000
        maxAmount = 41000
	}
	RESOURCE
	{
        name = Hydrogen
        amount = 82000
        maxAmount = 82000
	}
}

@PART[bluedog_Gemini_LunarReconSM]:NEEDS[ProfileDefault]:FINAL
{
	!MODULE[ModuleResourceConverter]:HAS[#ConverterName[Fuel?Cell]] {}
	!MODULE[Reliability]:HAS[#title[Converter]] {}
	
	MODULE
	{
		name = ProcessController
		resource = _FuelCell
		title = #KERBALISM_H2O2FuelCell_title//H2+O2 fuel cell
		capacity = 1
		valve_i = 1 // workaround until we have a better way to deal with dump valves
	}

	MODULE:NEEDS[FeatureReliability]
	{
		name = Reliability
		type = ProcessController
		title = #KERBALISM_FuelCell_title//Fuel Cell
		redundancy = Power Generation
		repair = Engineer
		mtbf = 72576000
		extra_cost = 1.0
		extra_mass = 0.5
	}
}

@PART[bluedog_Gemini_LunarReconSM]:NEEDS[ProfileDefault]:FIRST
{
	RESOURCE
	{
        name = Oxygen
        amount = 41000
        maxAmount = 41000
	}
	RESOURCE
	{
        name = Hydrogen
        amount = 82000
        maxAmount = 82000
	}
}

@PART[bluedog_Agena_EngineMount]:NEEDS[ProfileDefault]:FINAL
{
	RESOURCE
	{
		name = Oxygen
		amount = 8500
		maxAmount = 8500
	}
}