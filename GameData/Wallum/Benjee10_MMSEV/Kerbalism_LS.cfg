//Kerbalism Life Support

@PART[Benjee10_MMSEV_baseHDU]:NEEDS[Benjee10_MMSEV,ProfileDefault]:AFTER[KerbalismDefault]
{
	//6 month sortie for 3 kerbals
	//1 month redundancy
	
	@RESOURCE[Food]
	{
		@amount = 3
        @maxAmount = 3
        @amount *= #$@WALLUMCONFIG/LIFESUPPORT/FOOD$
        @maxAmount *= #$@WALLUMCONFIG/LIFESUPPORT/FOOD$
        @amount *= 210
        @maxAmount *= 210
	}
	@RESOURCE[Water]
	{
		@amount = 3
        @maxAmount = 3
        @amount *= #$@WALLUMCONFIG/LIFESUPPORT/WATER$
        @maxAmount *= #$@WALLUMCONFIG/LIFESUPPORT/WATER$
        @amount *= 210
        @maxAmount *= 210
	}
	@RESOURCE[Oxygen]
	{
		@amount = 3
        @maxAmount = 3
        @amount *= #$@WALLUMCONFIG/LIFESUPPORT/OXYGEN$
        @maxAmount *= #$@WALLUMCONFIG/LIFESUPPORT/OXYGEN$
        @amount *= 210
        @maxAmount *= 210
	}
}

@PART[Benjee10_MMSEV_baseHDU]:NEEDS[ProfileDefault]:FINAL
{
	//ETS timing suggests it would have water/oxygen recylcing
	@MODULE[Configure]:HAS[#title[Pod]]
	{
		@slots = 5
	}
	
	//@MODULE[ProcessController]:HAS[#resource[_Scrubber]]
	//{
	//	@capacity = 4
	//}
	
	@MODULE[ProcessController]:HAS[#resource[_WaterRecycler]]
	{
		@capacity = 8.4
	}
	
	MODULE
	{
		name = ProcessController
		resource = _WaterElectrolysis
		title = #KERBALISM_WaterElectrolysis_title//Water electrolysis
		capacity = 2
	}

	MODULE
	{
		name = ProcessController
		resource = _Sabatier
		title = #KERBALISM_SabatierProcess_title//Sabatier process
		capacity = 4
		valve_i = 2 // workaround until we have a better way to deal with dump valves
	}
	
	@MODULE[Configure]:HAS[#title[Pod]]
	{
		SETUP
		{
			name = Water Electrolysis
			desc = #KERBALISM_WaterElectrolysis_desc//Split <b>Water</b> into its <b>Hydrogen</b> and <b>Oxygen</b> components.

			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _WaterElectrolysis
				mass = 0.05
				cost = 500
			}
		}

		SETUP
		{
			name = Sabatier Process
			desc = #KERBALISM_SabatierProcess_desc//<b>Hydrogen</b> and <b>CarbonDioxide</b> react with a nickel catalyst to produce <b>Water</b> and <b>LiquidFuel</b>.

			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _Sabatier
				mass = 0.05
				cost = 1500
			}
		}
	}
	
	RESOURCE
	{
		name = Hydrogen
		amount = 0
		maxAmount = 5000
	}
}

@PART[Benjee10_MMSEV_baseLander]:NEEDS[Benjee10_MMSEV,ProfileDefault]:AFTER[KerbalismDefault]
{
	//2 month sortie for 4 kerbals
	
	@RESOURCE[Food]
	{
		@amount = 4
        @maxAmount = 4
        @amount *= #$@WALLUMCONFIG/LIFESUPPORT/FOOD$
        @maxAmount *= #$@WALLUMCONFIG/LIFESUPPORT/FOOD$
        @amount *= 60
        @maxAmount *= 60
	}
	@RESOURCE[Water]
	{
		@amount = 4
        @maxAmount = 4
        @amount *= #$@WALLUMCONFIG/LIFESUPPORT/WATER$
        @maxAmount *= #$@WALLUMCONFIG/LIFESUPPORT/WATER$
        @amount *= 60
        @maxAmount *= 60
	}
	@RESOURCE[Oxygen]
	{
		@amount = 4
        @maxAmount = 4
        @amount *= #$@WALLUMCONFIG/LIFESUPPORT/OXYGEN$
        @maxAmount *= #$@WALLUMCONFIG/LIFESUPPORT/OXYGEN$
        @amount *= 60
        @maxAmount *= 60
	}
}

@PART[Benjee10_MMSEV]:NEEDS[Benjee10_MMSEV,ProfileDefault]:AFTER[KerbalismDefault]
{
	//2 week sortie for 2 kerbals
	//3 days redundancy
	
	@RESOURCE[Food]
	{
		@amount = 2
        @maxAmount = 2
        @amount *= #$@WALLUMCONFIG/LIFESUPPORT/FOOD$
        @maxAmount *= #$@WALLUMCONFIG/LIFESUPPORT/FOOD$
        @amount *= 17
        @maxAmount *= 17
	}
	@RESOURCE[Water]
	{
		@amount = 2
        @maxAmount = 2
        @amount *= #$@WALLUMCONFIG/LIFESUPPORT/WATER$
        @maxAmount *= #$@WALLUMCONFIG/LIFESUPPORT/WATER$
        @amount *= 17
        @maxAmount *= 17
	}
	@RESOURCE[Oxygen]
	{
		@amount = 2
        @maxAmount = 2
        @amount *= #$@WALLUMCONFIG/LIFESUPPORT/OXYGEN$
        @maxAmount *= #$@WALLUMCONFIG/LIFESUPPORT/OXYGEN$
        @amount *= 17
        @maxAmount *= 17
	}
}

@PART[Benjee10_MMSEV_monopropSled]:NEEDS[Benjee10_MMSEV,ProfileDefault]:AFTER[KerbalismDefault]
{
	//enough for 1 day
	
	@RESOURCE[ElectricCharge]
	{
		@amount = 5000
        @maxAmount = 5000
	}
}


@PART[Benjee10_MMSEV_baseGreenhouse]:NEEDS[Benjee10_MMSEV,ProfileDefault]:AFTER[KerbalismDefault]
{
	MODULE
	{
		name = Greenhouse
		crop_resource = Food								// name of resource produced by harvests
		// Twice as effective as kerbalism-greenhouse part. 
		// See https://forum.kerbalspaceprogram.com/index.php?/topic/172400-131145-kerbalism-v180/&page=32&tab=comments#comment-3446891 for details.

		// This greenhouse has 18 independent sections! It's 18 staged crops in rotation. Almost non-stop production, but each harvest is 18 times smaller.
		crop_size = 3.0625									// 18 times less harvest than 2x"kerbalism-greenhouse"
		crop_rate = 0.00000416664					 // but you can harvest 18 times more often due to independent sections!
		ec_rate = 5												 // 2x"kerbalism-greenhouse"
		light_tolerance = 400.0						 // minimum lighting flux required for growth, in W/m^2
		pressure_tolerance = 0.1						// minimum pressure required for growth, in sea level atmospheres
		radiation_tolerance = 0.000008333	 // maximum radiation allowed for growth in rad/s, considered after shielding is applied
		shutters = 25DoorsOpen							// animation to manipulate shutters
		animBackwards = True

		INPUT_RESOURCE
		{
			name = Ammonia
			rate = 0.00019140625							// 2x"kerbalism-greenhouse"
		}

		INPUT_RESOURCE
		{
			name = Water
			rate = 0.0000063802							 // 2x"kerbalism-greenhouse"
		}

		INPUT_RESOURCE
		{
			name = WasteAtmosphere						// Plants work on WasteAtmosphere and replace a scrubber, if not enough WasteAtmosphere exists then CO2 is used
			rate = 0.0024915995							 // 2x"kerbalism-greenhouse"
		}

		INPUT_RESOURCE
		{
			name = CarbonDioxide							// Kerbals don't provide enough WasteAtmosphere for their required food production. If excess WasteAtmosphere is
																				// present then it will be used in place of CO2 injection
			rate = 0.00083053315							// 2x"kerbalism-greenhouse"
		}

		// Note. if there is a deficiency in the amount of WasteAtmosphere needed then the missing amount of WasteAtmosphere will be added to the
		// CarbonDioxide input and Vies Versa if not enough CarbonDioxide is present and there is extra WasteAtmosphere.
		// If there is not enough resources then the plants will suffer.

		OUTPUT_RESOURCE
		{
			name = Oxygen
			rate = 0.0034475965							 // 200% of oxygen required by 1 crew member
		}
	}

	RESOURCE
	{
		name = Ammonia
		amount = 544												// 2x"kerbalism-greenhouse"
		maxAmount = 544
	}

	RESOURCE
	{
		name = CarbonDioxide
		amount = 9000											 // 2x"kerbalism-greenhouse"
		maxAmount = 9000
	}

	// To support pressure control
	@MODULE[Configure]
	{
		@SETUP[Pressure?Control]
		{
			!RESOURCE[Nitrogen] {}
		}
	}

	RESOURCE
	{
		name = Nitrogen
		amount = 10000											// 1x"kerbalism-greenhouse" as it does not mess with crops
		maxAmount = 10000
	}

	RESOURCE
	{
		name = Water
		amount = 22												 // 2x"kerbalism-greenhouse"
		maxAmount = 22
	}

	!MODULE[ModuleAnimateGeneric] {}			// Greenhouse handles animation
}